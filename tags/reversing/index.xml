<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>reversing on Blog</title>
    <link>https://trungnguyen1909.github.io/blog/tags/reversing/</link>
    <description>Recent content in reversing on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>ntrung03@gmail.com (Nguyen Hoang Trung)</managingEditor>
    <webMaster>ntrung03@gmail.com (Nguyen Hoang Trung)</webMaster>
    <copyright>Â©2021, All Rights Reserved. Content licensed under CC BY 4.0</copyright>
    <lastBuildDate>Wed, 02 Sep 2020 19:48:00 +0700</lastBuildDate>
    
        <atom:link href="https://trungnguyen1909.github.io/blog/tags/reversing/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Google CTF 2020 teleport: Chromium sandbox escape</title>
        <link>https://trungnguyen1909.github.io/blog/post/GGCTF20/</link>
        <pubDate>Wed, 02 Sep 2020 19:48:00 +0700</pubDate>
        <author>ntrung03@gmail.com (Nguyen Hoang Trung)</author>
        <atom:modified>Wed, 02 Sep 2020 19:48:00 +0700</atom:modified>
        <guid>https://trungnguyen1909.github.io/blog/post/GGCTF20/</guid>
        <description>Teleport  Please write a full-chain exploit for Chrome. The flag is at /home/user/flag. Maybe there&amp;rsquo;s some way to tele&amp;lt;port&amp;gt; it out of there?
 1. Story Hi, last week I participated in Google CTF 2020 with my team pwnPHOfun</description>
        
        <dc:creator>Nguyen Hoang Trung</dc:creator>
        
        
        
        
          
            
              <category>GGCTF2020</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>pwn</category>
            
          
            
              <category>sandbox</category>
            
          
            
              <category>chromium</category>
            
          
            
              <category>browser</category>
            
          
            
              <category>mojo</category>
            
          
            
              <category>reversing</category>
            
          
            
              <category>offset</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>RITSEC18 Freeze</title>
        <link>https://trungnguyen1909.github.io/blog/post/RITSEC-2018/Freeze/</link>
        <pubDate>Thu, 22 Nov 2018 21:30:28 +0700</pubDate>
        <author>ntrung03@gmail.com (Nguyen Hoang Trung)</author>
        <atom:modified>Thu, 22 Nov 2018 21:30:28 +0700</atom:modified>
        <guid>https://trungnguyen1909.github.io/blog/post/RITSEC-2018/Freeze/</guid>
        <description>It&amp;rsquo;s clearly a python compiled program since there is a libpython and also, when using decompiler, there was a function name PyDontWriteByteCode
using &amp;lsquo;pyi-archive-viewer&amp;rsquo; we can extract the main function.
Append headers to the file
 &amp;quot;\x03\xf3\x0d\x0a\xf1\x32\x75\x5a&amp;quot; using uncompyle, we can get the main function.</description>
        
        <dc:creator>Nguyen Hoang Trung</dc:creator>
        
        
        
        
          
            
              <category>RITSEC</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>reversing</category>
            
          
            
              <category>Python</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>
