<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>kernel on Blog</title>
    <link>https://trungnguyen1909.github.io/blog/tags/kernel/</link>
    <description>Recent content in kernel on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>ntrung03@gmail.com (Nguyen Hoang Trung)</managingEditor>
    <webMaster>ntrung03@gmail.com (Nguyen Hoang Trung)</webMaster>
    <copyright>Â©{year}, All Rights Reserved. Content licensed under CC BY 4.0</copyright>
    <lastBuildDate>Mon, 28 Dec 2020 17:22:26 +0700</lastBuildDate>
    
        <atom:link href="https://trungnguyen1909.github.io/blog/tags/kernel/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Pwnable01 scull - Whitehat Grandprix 06</title>
        <link>https://trungnguyen1909.github.io/blog/post/WhiteHatGrandPrix06/Pwn01/</link>
        <pubDate>Mon, 28 Dec 2020 17:22:26 +0700</pubDate>
        <author>ntrung03@gmail.com (Nguyen Hoang Trung)</author>
        <atom:modified>Mon, 28 Dec 2020 17:22:26 +0700</atom:modified>
        <guid>https://trungnguyen1909.github.io/blog/post/WhiteHatGrandPrix06/Pwn01/</guid>
        <description>Pwnable01 Intro Hi guys, this is the writeup for the challenge Pwnable01 from Whitehat Grandprix 06 Final
You may want to checkout the exploit code and challenge&amp;rsquo;s source
Challenge  #pwn01:
You can ssh into our server as a low-privilege user.</description>
        
        <dc:creator>Nguyen Hoang Trung</dc:creator>
        
        
        
        
          
            
              <category>WhiteHatGrandprix</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>pwn</category>
            
          
            
              <category>linux</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>race-condition</category>
            
          
            
              <category>use-after-free</category>
            
          
            
              <category>UAF</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>pwning your kernelz: macOS 0day LPE</title>
        <link>https://trungnguyen1909.github.io/blog/post/CampCTF/PwningKernelz/</link>
        <pubDate>Wed, 04 Sep 2019 23:38:50 +0700</pubDate>
        <author>ntrung03@gmail.com (Nguyen Hoang Trung)</author>
        <atom:modified>Wed, 04 Sep 2019 23:38:50 +0700</atom:modified>
        <guid>https://trungnguyen1909.github.io/blog/post/CampCTF/PwningKernelz/</guid>
        <description>pwning your kernelz Background Hi everyone,
This is the writeup for the challenge pwning your kernelz, created by Linus Henze(@LinusHenze),
I came across this challenge when Linus tweeted a status update for the CTF.
Of course, I didn&amp;rsquo;t solve this challenge during the time of the CTF.</description>
        
        <dc:creator>Nguyen Hoang Trung</dc:creator>
        
        
        
        
          
            
              <category>Camp-CTF</category>
            
          
            
              <category>pwn</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>xnu</category>
            
          
            
              <category>0day</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>kpets FacebookCTF 2019 QR</title>
        <link>https://trungnguyen1909.github.io/blog/post/FBCTF19-Qual/kpets/</link>
        <pubDate>Wed, 12 Jun 2019 23:15:34 +0700</pubDate>
        <author>ntrung03@gmail.com (Nguyen Hoang Trung)</author>
        <atom:modified>Wed, 12 Jun 2019 23:15:34 +0700</atom:modified>
        <guid>https://trungnguyen1909.github.io/blog/post/FBCTF19-Qual/kpets/</guid>
        <description>kpets  welcome to Kernel Pets Simulator!
  We wrote a pet store application that was too slow, so we made a kernel module for it instead.
  Author: pippinthedog
 Hi everyone, this is the writeup for the Facebook CTF 2019 Qualification Round kpets challenge</description>
        
        <dc:creator>Nguyen Hoang Trung</dc:creator>
        
        
        
        
          
            
              <category>FBCTF</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>pwn</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>linux</category>
            
          
            
              <category>race-condition</category>
            
          
            
              <category>double-fetch</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Linux Kernel Debugging in VM</title>
        <link>https://trungnguyen1909.github.io/blog/post/misc/KDB/KDB/</link>
        <pubDate>Mon, 18 Feb 2019 16:48:13 +0700</pubDate>
        <author>ntrung03@gmail.com (Nguyen Hoang Trung)</author>
        <atom:modified>Mon, 18 Feb 2019 16:48:13 +0700</atom:modified>
        <guid>https://trungnguyen1909.github.io/blog/post/misc/KDB/KDB/</guid>
        <description>Kernel Debugging Instruction Setup I used VirtualBox for Kernel Debugging, VMWare shoud be able to do the same thing.
Enter Machine Settings -&amp;gt; Ports -&amp;gt; Serial -&amp;gt; Enable Serial Port
Port Number: Any :)))
Port mode: Host Pipe
Connect to existing : unchecked</description>
        
        <dc:creator>Nguyen Hoang Trung</dc:creator>
        
        
        
        
          
            
              <category>debug</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>linux</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>matesCTF KSMASH</title>
        <link>https://trungnguyen1909.github.io/blog/post/matesctf/KSMASH/</link>
        <pubDate>Mon, 18 Feb 2019 16:48:13 +0700</pubDate>
        <author>ntrung03@gmail.com (Nguyen Hoang Trung)</author>
        <atom:modified>Mon, 18 Feb 2019 16:48:13 +0700</atom:modified>
        <guid>https://trungnguyen1909.github.io/blog/post/matesctf/KSMASH/</guid>
        <description>KSMASH - Kernel Stack Smashing Background This is a Linux Kernel Module(LKM) exploitation challenge by nyaacate@gmail.com host in Round 3 MatesCTF 2018-2019
I solved this challenge overtime :&amp;lt;
But It seems that no team solved this so I still sent the exploit to the challenge author for testing and also wrote this writeup.</description>
        
        <dc:creator>Nguyen Hoang Trung</dc:creator>
        
        
        
        
          
            
              <category>matesCTF</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>pwn</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>linux</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>