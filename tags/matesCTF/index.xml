<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>matesCTF on Nguyen Hoang Trung</title>
    <link>https://trungnguyen1909.github.io/blog/tags/matesCTF/</link>
    <description>Recent content in matesCTF on Nguyen Hoang Trung</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Feb 2019 16:48:13 +0700</lastBuildDate>
    
	<atom:link href="https://trungnguyen1909.github.io/blog/tags/matesCTF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>matesCTF KSMASH</title>
      <link>https://trungnguyen1909.github.io/blog/post/matesctf/KSMASH/</link>
      <pubDate>Mon, 18 Feb 2019 16:48:13 +0700</pubDate>
      
      <guid>https://trungnguyen1909.github.io/blog/post/matesctf/KSMASH/</guid>
      <description>KSMASH - Kernel Stack Smashing Background This is a Linux Kernel Module(LKM) exploitation challenge by nyaacate@gmail.com host in Round 3 MatesCTF 2018-2019
I solved this challenge overtime :&amp;lt; But It seems that no team solved this so I still sent the exploit to the challenge author for testing and also wrote this writeup.
Challenge Description A kernel module is running, escape from non-root user to r00t to read /root/flag</description>
    </item>
    
    <item>
      <title>matesCTF notebook</title>
      <link>https://trungnguyen1909.github.io/blog/post/matesctf/notebook/</link>
      <pubDate>Wed, 10 Oct 2018 11:56:50 +0700</pubDate>
      
      <guid>https://trungnguyen1909.github.io/blog/post/matesctf/notebook/</guid>
      <description>Notebook Bài này mình pwn được sau khi được tiền bối Đào Xuân Nghĩa thông não sau giờ.
Đây là 1 bài Heap overflow.
checksec:
[*] &#39;/root/matesctf/notebook&#39; Arch: amd64-64-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x400000)  Có 2 loại note (bình thường: 1000bytes. Lớn: 2000bytes)
Các notes được lưu ở dạng double linked-list. 16 bytes đầu của mỗi note sẽ lưu note tiếp theo(FD) và note trước (BK)</description>
    </item>
    
    <item>
      <title>matesCTF babyOVERFLOW</title>
      <link>https://trungnguyen1909.github.io/blog/post/matesctf/babyOVERFLOW/</link>
      <pubDate>Wed, 10 Oct 2018 11:35:23 +0700</pubDate>
      
      <guid>https://trungnguyen1909.github.io/blog/post/matesctf/babyOVERFLOW/</guid>
      <description>babyOVERFLOW Tên file bài này gợi ý rất nhiều.
&amp;ldquo;baby&amp;rdquo; thường được dùng trong CTF chỉ những bài đơn giản dành cho người mới
&amp;ldquo;OVERFLOW&amp;rdquo; ở đây thì chỉ đến stack buffer overflow.
Chạy nó, nhập vào thì nó in ra lại đúng như thế.
Ta có thể thử nhập vào &amp;ldquo;%x&amp;rdquo; để xem có format string không thì kết quả là chương trình chạy bình thường
Thử với 1 input thật dài thì thấy không có lỗi gì xảy ra.</description>
    </item>
    
  </channel>
</rss>